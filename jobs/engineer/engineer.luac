local EngineerClass = class()

local job_helper = require 'stonehearth.jobs.job_helper'

function EngineerClass:initialize(entity)
	job_helper.initialize(self._sv, entity)
	self:restore()
end

function EngineerClass:restore()
	self._job_component = self._sv._entity:get_component('stonehearth:job')
	if self._sv.is_current_class then
		self:_create_xp_listeners()
	end
	self.__saved_variables:mark_changed()
end

function EngineerClass:promote(json,options)
	local talisman_entity = options and options.talisman
	job_helper.promote(self._sv, json)
	local crafter_component = self._sv._entity:add_component("stonehearth:crafter", json.crafter)
	if talisman_entity then
		crafter_component:setup_with_existing_workshop(talisman_entity)
	end
	self:_create_xp_listeners()
	self.__saved_variables:mark_changed()
end

function EngineerClass:get_job_level()
	return self._sv.last_gained_lv
end

function EngineerClass:is_max_level()
	return self._sv.is_max_level
end

function EngineerClass:get_level_data()
	return self._sv.level_data
end

function EngineerClass:unlock_perk(id)
	self._sv.attained_perks[id] = true
	self.__saved_variables:mark_changed()
end

function EngineerClass:has_perk(id)
	return self._sv.attained_perks[id]
end

function EngineerClass:get_worker_defense_participation()
	return self._sv.worker_defense_participant
end

function EngineerClass:level_up()
	job_helper.level_up(self._sv)
	self.__saved_variables:mark_changed()
end

function EngineerClass:associate_entities_to_talisman(talisman_entity)
	self._sv._entity:get_component('stonehearth:crafter'):associate_talisman_with_workshop(talisman_entity)
end

function EngineerClass:demote()
	self:_remove_xp_listeners()
	self._sv._entity:get_component('stonehearth:crafter'):demote()
	self._sv._entity:remove_component("stonehearth:crafter")
	self._sv.is_current_class = false
	self.__saved_variables:mark_changed()
end

function EngineerClass:set_fine_percentage(args)
	self._sv._entity:get_component('stonehearth:crafter'):set_fine_percentage(args.percent_chance)
end

function EngineerClass:unset_fine_percentage(args)
	self._sv._entity:get_component('stonehearth:crafter'):set_fine_percentage(0)
end

function EngineerClass:_create_xp_listeners()
	self._on_craft_listener = radiant.events.listen(self._sv._entity, 'stonehearth:crafter:craft_item', self, self._on_craft)
end

function EngineerClass:_remove_xp_listeners()
	self._on_craft_listener:destroy()
	self._on_craft_listener = nil
end

function EngineerClass:_on_craft(args)
	local recipe_data = args.recipe_data
	local level_key = 'craft_level_0'
	if recipe_data.level_requirement then
		level_key = 'craft_level_' .. recipe_data.level_requirement
	end
	local exp = self._sv.xp_rewards[level_key]
	self._job_component:add_exp(exp)
end

return EngineerClass